#!/usr/bin/env ruby


module Inkexport


def self.require_local(namespace)
	comps = [File.dirname(__FILE__), '..'].concat(namespace.split('.'))
	p File.expand_path(File.join(comps))
	require File.expand_path(File.join(comps))
end


end


require 'optparse'
Inkexport.require_local('lib.exporter')
Inkexport.require_local('lib.extractor')
Inkexport.require_local('lib.path')


require 'rbconfig'
is_windows = (RbConfig::CONFIG['host_os'] =~ /mswin|mingw|cygwin/)

# TODO: Create an Inkscape finder class
if is_windows
	puts 'running in cygwin'
	inkscape_path = `which inkscape.exe`
else 
	inkscape_path = `which inkscape`
end
if inkscape_path.empty?()
	inkscape_path = '/Applications/Inkscape.app/Contents/Resources/bin/inkscape'
end

inkscape_path = Inkexport::Path.escape(inkscape_path, !is_windows)
puts "Inkscape:" + inkscape_path

actual_dpi = nil
input_path = nil
output_dir = nil

opt = OptionParser.new()
opt.on('--inkscape=<path>', 'Inkscape used to extract') {|v| inkscape_path = v}
opt.on('--actual-dpi=<dpi>', 'Actual DPI of @1x image') {|v| actual_dpi = v}
opt.on('-f', '--file=<path>', 'Input file') {|v| input_path = v}
opt.on('-o', '--output-dir=<path>', 'Output directory') {|v| output_dir = v}
argv = opt.parse!(ARGV)

if input_path == nil
	puts opt.help()
	exit
end

extractor = Inkexport::Extractor.new(input_path)
targets = extractor.extract()

puts 'exporting targets :' + targets.map { |i| "'" + i.to_s + "'" }.join(",\n")

exporter = Inkexport::Exporter.new(inkscape_path, input_path)
exporter.actual_dpi = actual_dpi.to_i() if actual_dpi != nil
exporter.output_dir = output_dir if output_dir != nil

exporter.export_targets(targets)
